/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TestableFlashloanInterface extends ethers.utils.Interface {
  functions: {
    "callFunction(address,tuple,bytes)": FunctionFragment;
    "initateFlashLoan(address,uint256,address,address,uint8)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "callFunction",
    values: [string, { owner: string; number: BigNumberish }, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initateFlashLoan",
    values: [string, BigNumberish, string, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "callFunction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initateFlashLoan",
    data: BytesLike
  ): Result;

  events: {
    "GetBalanceDest(uint256)": EventFragment;
    "GetBalanceSrc(uint256)": EventFragment;
    "GetDirection(uint8)": EventFragment;
    "GetFinalBalance(uint256)": EventFragment;
    "GetKyberExpectedRate(uint256)": EventFragment;
    "GetRepayAmount(uint256)": EventFragment;
    "GetUniswapMinOuts(uint256[])": EventFragment;
    "Hit(bool)": EventFragment;
    "NewArbitrage(uint8,address,address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "GetBalanceDest"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GetBalanceSrc"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GetDirection"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GetFinalBalance"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GetKyberExpectedRate"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GetRepayAmount"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GetUniswapMinOuts"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Hit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewArbitrage"): EventFragment;
}

export class TestableFlashloan extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TestableFlashloanInterface;

  functions: {
    callFunction(
      sender: string,
      account: { owner: string; number: BigNumberish },
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "callFunction(address,tuple,bytes)"(
      sender: string,
      account: { owner: string; number: BigNumberish },
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    initateFlashLoan(
      _solo: string,
      _amount: BigNumberish,
      _token1: string,
      _token2: string,
      _direction: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initateFlashLoan(address,uint256,address,address,uint8)"(
      _solo: string,
      _amount: BigNumberish,
      _token1: string,
      _token2: string,
      _direction: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  callFunction(
    sender: string,
    account: { owner: string; number: BigNumberish },
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "callFunction(address,tuple,bytes)"(
    sender: string,
    account: { owner: string; number: BigNumberish },
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  initateFlashLoan(
    _solo: string,
    _amount: BigNumberish,
    _token1: string,
    _token2: string,
    _direction: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initateFlashLoan(address,uint256,address,address,uint8)"(
    _solo: string,
    _amount: BigNumberish,
    _token1: string,
    _token2: string,
    _direction: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    callFunction(
      sender: string,
      account: { owner: string; number: BigNumberish },
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "callFunction(address,tuple,bytes)"(
      sender: string,
      account: { owner: string; number: BigNumberish },
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    initateFlashLoan(
      _solo: string,
      _amount: BigNumberish,
      _token1: string,
      _token2: string,
      _direction: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initateFlashLoan(address,uint256,address,address,uint8)"(
      _solo: string,
      _amount: BigNumberish,
      _token1: string,
      _token2: string,
      _direction: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    GetBalanceDest(balance: BigNumberish | null): EventFilter;

    GetBalanceSrc(balance: BigNumberish | null): EventFilter;

    GetDirection(direction: BigNumberish | null): EventFilter;

    GetFinalBalance(balance: BigNumberish | null): EventFilter;

    GetKyberExpectedRate(expectedRate: BigNumberish | null): EventFilter;

    GetRepayAmount(repayAmount: BigNumberish | null): EventFilter;

    GetUniswapMinOuts(minOuts: null): EventFilter;

    Hit(hit: null): EventFilter;

    NewArbitrage(
      direction: BigNumberish | null,
      token1: string | null,
      token2: string | null,
      profit: null,
      date: null
    ): EventFilter;
  };

  estimateGas: {
    callFunction(
      sender: string,
      account: { owner: string; number: BigNumberish },
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "callFunction(address,tuple,bytes)"(
      sender: string,
      account: { owner: string; number: BigNumberish },
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    initateFlashLoan(
      _solo: string,
      _amount: BigNumberish,
      _token1: string,
      _token2: string,
      _direction: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initateFlashLoan(address,uint256,address,address,uint8)"(
      _solo: string,
      _amount: BigNumberish,
      _token1: string,
      _token2: string,
      _direction: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    callFunction(
      sender: string,
      account: { owner: string; number: BigNumberish },
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "callFunction(address,tuple,bytes)"(
      sender: string,
      account: { owner: string; number: BigNumberish },
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initateFlashLoan(
      _solo: string,
      _amount: BigNumberish,
      _token1: string,
      _token2: string,
      _direction: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initateFlashLoan(address,uint256,address,address,uint8)"(
      _solo: string,
      _amount: BigNumberish,
      _token1: string,
      _token2: string,
      _direction: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
