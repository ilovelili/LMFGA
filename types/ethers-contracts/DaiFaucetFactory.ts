/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { DaiFaucet } from "./DaiFaucet";

export class DaiFaucetFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(daiAddress: string, overrides?: Overrides): Promise<DaiFaucet> {
    return super.deploy(daiAddress, overrides || {}) as Promise<DaiFaucet>;
  }
  getDeployTransaction(
    daiAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(daiAddress, overrides || {});
  }
  attach(address: string): DaiFaucet {
    return super.attach(address) as DaiFaucet;
  }
  connect(signer: Signer): DaiFaucetFactory {
    return super.connect(signer) as DaiFaucetFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DaiFaucet {
    return new Contract(address, _abi, signerOrProvider) as DaiFaucet;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "daiAddress",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "sendDai",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161020e38038061020e8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061017a806100946000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638cd6b34014610030575b600080fd5b61005c6004803603602081101561004657600080fd5b810190808035906020019092919050505061005e565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561010657600080fd5b505af115801561011a573d6000803e3d6000fd5b505050506040513d602081101561013057600080fd5b8101908080519060200190929190505050505056fea265627a7a723158209b7186d2a5984eb4f68ce9798b687a9cb0b95af6979501121001ca9a7c7ea50564736f6c63430005100032";
